{
  "ts-node": {
    "experimentalResolver": true,
    "experimentalSpecifierResolution": "node",
    "swc": true
  },
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */
    /* Projects */
    "incremental": true /* Enable incremental compilation */,
    "composite": true /* Enable constraints that allow a TypeScript project to be used with project references. */,
    "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": ["es2022", "dom"] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "jsx": "react-jsx" /* Specify what JSX code is generated. */,
    "module": "CommonJS" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "resolveJsonModule": true /* Enable importing .json files */,
    "declarationMap": false /* Create sourcemaps for d.ts files. */,
    "emitDeclarationOnly": false /* Only output d.ts files and not JavaScript files. */,
    "sourceMap": false /* Create source map files for emitted JavaScript files. */,
    "outDir": "./build" /* Specify an output folder for all emitted files. */,
    "noEmit": false /* Disable emitting files from a compilation. */,
    "removeComments": true /* Disable emitting comments. */,
    "stripInternal": true /* Disable emitting declarations that have `@internal` in their JSDoc comments. */,
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "strict": true /* Enable all strict type-checking options. */,
    "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
    "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
    "noImplicitThis": true /* Enable error reporting when `this` is given the type `any`. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noUncheckedIndexedAccess": true /* Include 'undefined' in index signature results */,
    "skipDefaultLibCheck": true /* Skip type checking .d.ts files that are included with TypeScript. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    //"verbatimModuleSyntax": true,
  },
  "include": ["**/*.cts", "**/*.ts", "src/**/*.json","secret.json"],
  "exclude": ["node_modules", "node_modules/", "build/", "compile/"],
  "outDir": "./build"
}

